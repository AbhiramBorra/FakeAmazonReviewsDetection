{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","source":["# Mount Google Drive\n","from google.colab import drive\n","drive.mount('/content/drive')"],"metadata":{"id":"rrykOda5fdJb","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1692997984950,"user_tz":420,"elapsed":1048,"user":{"displayName":"Jaryd Bones","userId":"06420968805588667382"}},"outputId":"e3a38933-7ab5-4ce4-d7eb-bd6bee5e9bae"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Drive already mounted at /content/drive; to attempt to forcibly remount, call drive.mount(\"/content/drive\", force_remount=True).\n"]}]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"hPVR-jOcRjta","executionInfo":{"status":"ok","timestamp":1693002167482,"user_tz":420,"elapsed":6647,"user":{"displayName":"Jaryd Bones","userId":"06420968805588667382"}},"outputId":"adbf9035-cc8a-4a75-b613-2f4951803013"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["   reviews.rating                                       reviews.text  \\\n","0               3  I order 3 of them and one of the item is bad q...   \n","1               4  Bulk is always the less expensive way to go fo...   \n","2               5  Well they are not Duracell but for the price i...   \n","3               5  Seem to work as well as name brand batteries a...   \n","4               5  These batteries are very long lasting the pric...   \n","\n","                                       reviews.title  reviews.username  \n","0  ... 3 of them and one of the item is bad quali...        Byger yang  \n","1  ... always the less expensive way to go for pr...              ByMG  \n","2  ... are not Duracell but for the price i am ha...  BySharon Lambert  \n","3  ... as well as name brand batteries at a much ...     Bymark sexson  \n","4  ... batteries are very long lasting the price ...           Bylinda  "],"text/html":["\n","  <div id=\"df-87f2b8b2-2422-44e2-a74d-daeb66476f9f\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>reviews.rating</th>\n","      <th>reviews.text</th>\n","      <th>reviews.title</th>\n","      <th>reviews.username</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>3</td>\n","      <td>I order 3 of them and one of the item is bad q...</td>\n","      <td>... 3 of them and one of the item is bad quali...</td>\n","      <td>Byger yang</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>4</td>\n","      <td>Bulk is always the less expensive way to go fo...</td>\n","      <td>... always the less expensive way to go for pr...</td>\n","      <td>ByMG</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>5</td>\n","      <td>Well they are not Duracell but for the price i...</td>\n","      <td>... are not Duracell but for the price i am ha...</td>\n","      <td>BySharon Lambert</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>5</td>\n","      <td>Seem to work as well as name brand batteries a...</td>\n","      <td>... as well as name brand batteries at a much ...</td>\n","      <td>Bymark sexson</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>5</td>\n","      <td>These batteries are very long lasting the pric...</td>\n","      <td>... batteries are very long lasting the price ...</td>\n","      <td>Bylinda</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-87f2b8b2-2422-44e2-a74d-daeb66476f9f')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-87f2b8b2-2422-44e2-a74d-daeb66476f9f button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-87f2b8b2-2422-44e2-a74d-daeb66476f9f');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-adcf0dd3-30b7-4521-a8b9-78787d1df530\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-adcf0dd3-30b7-4521-a8b9-78787d1df530')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","    background-color: #E8F0FE;\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: #1967D2;\n","    height: 32px;\n","    padding: 0 0 0 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: #E2EBFA;\n","    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: #174EA6;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","    background-color: #3B4455;\n","    fill: #D2E3FC;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart:hover {\n","    background-color: #434B5C;\n","    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","    fill: #FFFFFF;\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const charts = await google.colab.kernel.invokeFunction(\n","          'suggestCharts', [key], {});\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-adcf0dd3-30b7-4521-a8b9-78787d1df530 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":32}],"source":["import pandas as pd\n","import numpy as np\n","import matplotlib.pyplot as plt\n","import seaborn as sns\n","\n","# load csv\n","df = pd.read_csv(\"/content/drive/Shareddrives/ECS 171 Group Project/Trainning_data_set.csv\")\n","amazonData_train = pd.read_csv('/content/drive/Shareddrives/ECS 171 Group Project/Trainning_data_set.csv')\n","amazonData_train.columns\n","amazonData_train = amazonData_train.drop(columns = ['id', 'dateAdded', 'dateUpdated', 'name', 'asins', 'brand',\n","       'categories', 'primaryCategories', 'imageURLs', 'keys', 'manufacturer',\n","       'manufacturerNumber', 'reviews.date', 'reviews.dateSeen',\n","       'reviews.didPurchase', 'reviews.doRecommend', 'reviews.id', 'reviews.sourceURLs', 'sourceURLs', 'reviews.numHelpful'])\n","amazonData_train.head()"]},{"cell_type":"code","source":["# Matrix\n","df = pd.read_csv(\"/content/drive/Shareddrives/ECS 171 Group Project/Trainning_data_set.csv\")\n","# df.drop(['id', 'dateAdded', 'dateUpdated', 'name', 'asins', 'brand',\n","#        'categories', 'primaryCategories', 'imageURLs', 'keys', 'manufacturer',\n","#        'manufacturerNumber', 'reviews.date', 'reviews.dateSeen',\n","#        'reviews.didPurchase', 'reviews.doRecommend', 'reviews.id', 'reviews.sourceURLs', 'sourceURLs', 'reviews.numHelpful'],axis=1, inplace = True)\n","\n","# plot\n","cmap = sns.diverging_palette(230, 20, as_cmap = True)\n","sns.heatmap(df.corr(), cmap = cmap, annot = True, vmin = -1, vmax = 1, center = 0)\n","\n","# non much useful informaiton found from the raw data, since they are pure text, need more study, like tf-idf to show the data in numbers."],"metadata":{"id":"7BuodNu7aj1V","colab":{"base_uri":"https://localhost:8080/","height":509},"executionInfo":{"status":"ok","timestamp":1693002179070,"user_tz":420,"elapsed":9137,"user":{"displayName":"Jaryd Bones","userId":"06420968805588667382"}},"outputId":"d621bfc6-20cd-4cc8-a062-98428c55060d"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-33-8e6fc7641e69>:10: FutureWarning: The default value of numeric_only in DataFrame.corr is deprecated. In a future version, it will default to False. Select only valid columns or specify the value of numeric_only to silence this warning.\n","  sns.heatmap(df.corr(), cmap = cmap, annot = True, vmin = -1, vmax = 1, center = 0)\n"]},{"output_type":"execute_result","data":{"text/plain":["<Axes: >"]},"metadata":{},"execution_count":33},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 2 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["# Load data set\n","amazonData_train_numerical = pd.read_csv('/content/drive/Shareddrives/ECS 171 Group Project/Trainning_data_set.csv')\n","\n","# Drop non numerical data to create scatter plots\n","amazonData_train_numerical = amazonData_train_numerical.drop(columns = ['id', 'dateAdded', 'dateUpdated', 'name', 'asins', 'brand',\n","       'categories', 'primaryCategories', 'imageURLs', 'keys', 'manufacturer',\n","       'manufacturerNumber', 'reviews.date', 'reviews.dateSeen',\n","       'reviews.didPurchase', 'reviews.doRecommend', 'reviews.sourceURLs', 'sourceURLs'])\n","\n","# Create pairplot to show all scatter plots\n","sns.pairplot(amazonData_train_numerical, kind=\"scatter\", plot_kws=dict(alpha=0.5, s=50), diag_kind='kde')\n"],"metadata":{"id":"NgvOAnAE0BSI"},"execution_count":null,"outputs":[]}]}